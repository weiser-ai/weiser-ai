version: '3.9'
# If using colima as docker runtime on osx, then set WORKDIR so volume mounts work.
# WORKDIR=`pwd` docker-compose up
services:

  postgres:
    image: postgres:14.2
    volumes:
      - ${PWD}/examples/structure.sql:/docker-entrypoint-initdb.d/structure.sql
      - ${PWD}/postgres-data/:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=${POSTGRES_DB:-example}
    ports:
      - 5432:5432

  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ${PWD}/minio_data:/data
      - ${PWD}/examples/proxy/certs:/certs
    environment:
      - MINIO_ROOT_USER=cube
      - MINIO_ROOT_PASSWORD=mypassword
      - MINIO_DEFAULT_BUCKETS=metricstore
      - MINIO_SCHEME=https
      - BITNAMI_DEBUG=true

  cube_api:
    image: cubejs/cube:v0.34.49
    ports:
      - 4000:4000
      - 5433:5433
    environment:
      - CUBEJS_LOG_LEVEL=info
      - DEBUG_LOG=true
      - CUBEJS_DB_TYPE=duckdb
      - CUBEJS_DB_DUCKDB_S3_ACCESS_KEY_ID=W1aip9sC0lGDVNRt
      - CUBEJS_DB_DUCKDB_S3_SECRET_ACCESS_KEY=yO8atL6eYnLMuoIuZC3yXuawQQbmgYgU
      - CUBEJS_DB_DUCKDB_S3_ENDPOINT=minio:9000
      - CUBEJS_DB_DUCKDB_S3_REGION=us-east-1
      - CUBEJS_DB_DUCKDB_S3_URL_STYLE=path
      - CUBEJS_API_SECRET=secret1234
      - CUBEJS_DEV_MODE=true
      - CUBEJS_PG_SQL_PORT=5433
      - CUBEJS_SQL_USER=myusername
      - CUBEJS_SQL_PASSWORD=mypassword
    volumes:
      - ${PWD}/metricstore:/cube/conf
      - ${PWD}/metricstore/schema:/cube/schema
    depends_on:
      - minio
