"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[734],{5031:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"check-types/measure","title":"Measure Check","description":"The measure check is specifically designed for Cube.js semantic layer validation. It validates pre-defined measures from your Cube.js data model, making it ideal for semantic layer data quality checks.","source":"@site/docs/check-types/measure.md","sourceDirName":"check-types","slug":"/check-types/measure","permalink":"/docs/check-types/measure","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Max Check","permalink":"/docs/check-types/max"},"next":{"title":"Not Empty Check","permalink":"/docs/check-types/not-empty"}}');var i=n(4848),a=n(8453);const c={},l="Measure Check",t={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Measure Check",id:"basic-measure-check",level:3},{value:"Measure with Dimensions",id:"measure-with-dimensions",level:3},{value:"Complex Measure",id:"complex-measure",level:3},{value:"Time-based Measure",id:"time-based-measure",level:3},{value:"Cube.js Integration",id:"cubejs-integration",level:2},{value:"Sample Cube Schema",id:"sample-cube-schema",level:3},{value:"Datasource Configuration",id:"datasource-configuration",level:3},{value:"Generated SQL",id:"generated-sql",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Advantages over Raw SQL",id:"advantages-over-raw-sql",level:2},{value:"Example Results",id:"example-results",level:2},{value:"Common Measure Types",id:"common-measure-types",level:2},{value:"Revenue Measures",id:"revenue-measures",level:3},{value:"User Engagement Measures",id:"user-engagement-measures",level:3},{value:"Conversion Measures",id:"conversion-measures",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Performance Tips",id:"performance-tips",level:2},{value:"Related Checks",id:"related-checks",level:2}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"measure-check",children:"Measure Check"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"measure"})," check is specifically designed for Cube.js semantic layer validation. It validates pre-defined measures from your Cube.js data model, making it ideal for semantic layer data quality checks."]}),"\n",(0,i.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Required"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"name"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Unique name for the check"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"dataset"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Cube name or SQL query"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"type"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsxs)(s.td,{children:["Must be ",(0,i.jsx)(s.code,{children:"measure"})]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"measure"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Cube.js measure name"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"condition"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Comparison operator"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"threshold"})}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Value to compare against"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"dimensions"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"Cube.js dimensions for grouping"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"filter"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"WHERE clause conditions"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cube.js instance must be running and accessible"}),"\n",(0,i.jsxs)(s.li,{children:["Datasource must be configured with ",(0,i.jsx)(s.code,{children:"type: cube"})]}),"\n",(0,i.jsx)(s.li,{children:"Measures must be defined in your Cube.js schema"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.h3,{id:"basic-measure-check",children:"Basic Measure Check"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: total_revenue_measure\n  dataset: Orders\n  type: measure\n  measure: totalRevenue\n  condition: ge\n  threshold: 1000000\n"})}),"\n",(0,i.jsxs)(s.p,{children:["This check validates the ",(0,i.jsx)(s.code,{children:"totalRevenue"})," measure from the Orders cube."]}),"\n",(0,i.jsx)(s.h3,{id:"measure-with-dimensions",children:"Measure with Dimensions"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: revenue_by_region\n  dataset: Sales\n  type: measure\n  measure: revenue\n  dimensions: [region, quarter]\n  condition: gt\n  threshold: 50000\n"})}),"\n",(0,i.jsx)(s.p,{children:"This check ensures revenue by region and quarter exceeds $50K."}),"\n",(0,i.jsx)(s.h3,{id:"complex-measure",children:"Complex Measure"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: customer_lifetime_value\n  dataset: Customers\n  type: measure\n  measure: lifetimeValue\n  dimensions: [customerSegment]\n  condition: ge\n  threshold: 500\n"})}),"\n",(0,i.jsx)(s.p,{children:"This check validates customer lifetime value by segment."}),"\n",(0,i.jsx)(s.h3,{id:"time-based-measure",children:"Time-based Measure"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: monthly_active_users\n  dataset: Users\n  type: measure\n  measure: monthlyActiveUsers\n  condition: gt\n  threshold: 10000\n  time_dimension:\n    name: createdAt\n    granularity: month\n"})}),"\n",(0,i.jsx)(s.p,{children:"This check ensures monthly active users exceed 10K."}),"\n",(0,i.jsx)(s.h2,{id:"cubejs-integration",children:"Cube.js Integration"}),"\n",(0,i.jsx)(s.h3,{id:"sample-cube-schema",children:"Sample Cube Schema"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"// schemas/Orders.js\ncube(`Orders`, {\n  sql: `SELECT * FROM orders`,\n  \n  measures: {\n    totalRevenue: {\n      type: `sum`,\n      sql: `order_amount`\n    },\n    \n    averageOrderValue: {\n      type: `avg`,\n      sql: `order_amount`\n    },\n    \n    orderCount: {\n      type: `count`\n    }\n  },\n  \n  dimensions: {\n    region: {\n      sql: `region`,\n      type: `string`\n    },\n    \n    createdAt: {\n      sql: `created_at`,\n      type: `time`\n    }\n  }\n});\n"})}),"\n",(0,i.jsx)(s.h3,{id:"datasource-configuration",children:"Datasource Configuration"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"datasources:\n  - name: cube\n    type: cube\n    uri: http://localhost:4000/cubejs-api/v1\n"})}),"\n",(0,i.jsx)(s.h2,{id:"generated-sql",children:"Generated SQL"}),"\n",(0,i.jsx)(s.p,{children:"The measure check generates Cube.js API calls that translate to optimized SQL:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Generated by Cube.js for totalRevenue measure\nSELECT SUM(order_amount) as totalRevenue\nFROM orders\n"})}),"\n",(0,i.jsx)(s.p,{children:"With dimensions:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Generated by Cube.js with dimensions\nSELECT \n  region,\n  quarter,\n  SUM(order_amount) as revenue\nFROM orders\nGROUP BY region, quarter\n"})}),"\n",(0,i.jsx)(s.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Semantic Layer Validation"}),": Ensure business metrics are correct"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"KPI Monitoring"}),": Validate key performance indicators"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Business Rules"}),": Check calculated business measures"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Data Consistency"}),": Ensure measures match expectations"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cube.js Testing"}),": Validate Cube.js schema definitions"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"advantages-over-raw-sql",children:"Advantages over Raw SQL"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pre-calculated"}),": Measures are optimized by Cube.js"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Business Logic"}),": Includes complex business calculations"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Caching"}),": Benefits from Cube.js caching layer"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Consistency"}),": Uses same definitions as dashboards"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Security"}),": Respects Cube.js security context"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"example-results",children:"Example Results"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\u2713 total_revenue_measure: 1250000 (\u2265 1000000)\n\u2717 revenue_by_region_west_q1: 45000 (> 50000)\n\u2713 customer_lifetime_value_premium: 750 (\u2265 500)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"common-measure-types",children:"Common Measure Types"}),"\n",(0,i.jsx)(s.h3,{id:"revenue-measures",children:"Revenue Measures"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: monthly_recurring_revenue\n  dataset: Subscriptions\n  type: measure\n  measure: mrr\n  condition: gt\n  threshold: 100000\n"})}),"\n",(0,i.jsx)(s.h3,{id:"user-engagement-measures",children:"User Engagement Measures"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: daily_active_users\n  dataset: UserActivity\n  type: measure\n  measure: dau\n  condition: ge\n  threshold: 5000\n"})}),"\n",(0,i.jsx)(s.h3,{id:"conversion-measures",children:"Conversion Measures"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"- name: conversion_rate\n  dataset: Funnel\n  type: measure\n  measure: conversionRate\n  condition: ge\n  threshold: 0.05\n"})}),"\n",(0,i.jsx)(s.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(s.p,{children:"Common issues and solutions:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cube not found"}),": Verify cube name matches schema"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Measure not found"}),": Check measure exists in cube definition"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"API connection"}),": Ensure Cube.js instance is accessible"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Security"}),": Verify API token and permissions"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"performance-tips",children:"Performance Tips"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pre-aggregations"}),": Use Cube.js pre-aggregations for large datasets"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Caching"}),": Leverage Cube.js caching for repeated checks"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Partitioning"}),": Use time-based partitioning in cube schema"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Indexes"}),": Ensure underlying tables have proper indexes"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"related-checks",children:"Related Checks"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/check-types/numeric",children:(0,i.jsx)(s.strong,{children:"Numeric"})})," - Raw SQL numeric expressions"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/check-types/sum",children:(0,i.jsx)(s.strong,{children:"Sum"})})," - Simple sum aggregations"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/check-types/row-count",children:(0,i.jsx)(s.strong,{children:"Row Count"})})," - Basic count validations"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var r=n(6540);const i={},a=r.createContext(i);function c(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);