"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[873],{8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}},8730:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"configuration","title":"Configuration","description":"Weiser uses YAML configuration files to define data quality checks, datasources, and connections. This page provides a comprehensive guide to configuring your Weiser setup.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started with Weiser","permalink":"/docs/tutorial/getting-started"},"next":{"title":"Supported Datasources","permalink":"/docs/datasources"}}');var r=s(4848),t=s(8453);const d={},l="Configuration",c={},a=[{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"Environment Variables (Recommended)",id:"environment-variables-recommended",level:2},{value:"Datasources",id:"datasources",level:2},{value:"PostgreSQL",id:"postgresql",level:3},{value:"MySQL",id:"mysql",level:3},{value:"Cube.js",id:"cubejs",level:3},{value:"Connection URI",id:"connection-uri",level:3},{value:"Metric Store Connections",id:"metric-store-connections",level:2},{value:"DuckDB (Default)",id:"duckdb-default",level:3},{value:"PostgreSQL Metric Store",id:"postgresql-metric-store",level:3},{value:"S3 Storage (DuckDB with S3)",id:"s3-storage-duckdb-with-s3",level:3},{value:"Check Configuration",id:"check-configuration",level:2},{value:"Basic Check Structure",id:"basic-check-structure",level:3},{value:"Required Parameters",id:"required-parameters",level:3},{value:"Optional Parameters",id:"optional-parameters",level:3},{value:"Conditions",id:"conditions",level:2},{value:"Threshold Types",id:"threshold-types",level:2},{value:"Single Value",id:"single-value",level:3},{value:"Range (for between condition)",id:"range-for-between-condition",level:3},{value:"Decimal Values",id:"decimal-values",level:3},{value:"Dimensions",id:"dimensions",level:2},{value:"Time Dimensions",id:"time-dimensions",level:2},{value:"Filters",id:"filters",level:2},{value:"Dataset Options",id:"dataset-options",level:2},{value:"Table Name",id:"table-name",level:3},{value:"Multiple Tables",id:"multiple-tables",level:3},{value:"Custom SQL",id:"custom-sql",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Includes",id:"configuration-includes",level:2},{value:"Templating",id:"templating",level:2},{value:"Slack Integration",id:"slack-integration",level:2},{value:"Validation",id:"validation",level:2},{value:"Missing Required Fields",id:"missing-required-fields",level:3},{value:"Invalid Check Type",id:"invalid-check-type",level:3},{value:"Invalid Condition",id:"invalid-condition",level:3},{value:"Missing Threshold for Between",id:"missing-threshold-for-between",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Example Complete Configuration",id:"example-complete-configuration",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,r.jsx)(n.p,{children:"Weiser uses YAML configuration files to define data quality checks, datasources, and connections. This page provides a comprehensive guide to configuring your Weiser setup."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"version: 1\ndatasources:\n  - name: default\n    type: postgresql\n    host: localhost\n    port: 5432\n    db_name: mydb\n    user: postgres\n    password: secret\n\nconnections:\n  - name: metricstore\n    type: metricstore\n    db_type: duckdb\n    db_name: metricstore.db\n\nchecks:\n  - name: orders_row_count\n    dataset: orders\n    type: row_count\n    condition: gt\n    threshold: 0\n\nincludes:\n  - path/to/additional/config.yaml\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables-recommended",children:"Environment Variables (Recommended)"}),"\n",(0,r.jsxs)(n.p,{children:["Your configuration can use environment variables for sensitive information, weiser will read your .env file and replace the variables in the configuration.\nEnvironment variables already defined in your system can also be used. They are available in the configuration as ",(0,r.jsx)(n.code,{children:"{{VARIABLE_NAME}}"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"datasources",children:"Datasources"}),"\n",(0,r.jsx)(n.p,{children:"Configure connections to your data sources:"}),"\n",(0,r.jsx)(n.h3,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"datasources:\n  - name: postgres_prod\n    type: postgresql\n    host: prod-db.company.com\n    port: 5432\n    db_name: production\n    user: weiser_user\n    password: mysecretpassword\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mysql",children:"MySQL"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"datasources:\n  - name: mysql_analytics\n    type: mysql\n    host: mysql.example.com\n    port: 3306\n    db_name: analytics\n    user: analytics_user\n    password: {{MYSQL_PASSWORD}}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cubejs",children:"Cube.js"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"datasources:\n  - name: cube_api\n    type: cube\n    uri: http://localhost:4000/cubejs-api/v1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"connection-uri",children:"Connection URI"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"datasources:\n  - name: warehouse\n    type: postgresql\n    uri: postgresql://user:pass@host:5432/database\n"})}),"\n",(0,r.jsx)(n.h2,{id:"metric-store-connections",children:"Metric Store Connections"}),"\n",(0,r.jsx)(n.p,{children:"Configure where check results are stored:"}),"\n",(0,r.jsx)(n.h3,{id:"duckdb-default",children:"DuckDB (Default)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"connections:\n  - name: metricstore\n    type: metricstore\n    db_type: duckdb\n    db_name: metricstore.db\n"})}),"\n",(0,r.jsx)(n.h3,{id:"postgresql-metric-store",children:"PostgreSQL Metric Store"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"connections:\n  - name: metricstore\n    type: metricstore\n    db_type: postgresql\n    host: metrics-db.company.com\n    port: 5432\n    db_name: metrics\n    user: metrics_user\n    password: {{METRICS_PASSWORD}}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"s3-storage-duckdb-with-s3",children:"S3 Storage (DuckDB with S3)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"connections:\n  - name: metricstore\n    type: metricstore\n    db_type: duckdb\n    s3_access_key: {{S3_ACCESS_KEY}}\n    s3_secret_access_key: {{S3_SECRET_KEY}}\n    s3_endpoint: s3.amazonaws.com\n    s3_bucket: weiser-metrics\n    s3_region: us-east-1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"check-configuration",children:"Check Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"basic-check-structure",children:"Basic Check Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"checks:\n  - name: unique_check_name\n    dataset: table_name_or_sql\n    type: check_type\n    condition: comparison_operator\n    threshold: value_or_range\n    # Optional parameters\n    measure: column_or_expression\n    dimensions: [column1, column2]\n    filter: where_clause\n    time_dimension:\n      name: date_column\n      granularity: day\n"})}),"\n",(0,r.jsx)(n.h3,{id:"required-parameters",children:"Required Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"Unique identifier"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"orders_row_count"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dataset"})}),(0,r.jsx)(n.td,{children:"Table or SQL query"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"orders"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"Check type"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"row_count"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"condition"})}),(0,r.jsx)(n.td,{children:"Comparison operator"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gt"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"threshold"})}),(0,r.jsx)(n.td,{children:"Expected value"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"1000"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"optional-parameters",children:"Optional Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"datasource"})}),(0,r.jsx)(n.td,{children:"Datasource name"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postgres_prod"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"measure"})}),(0,r.jsx)(n.td,{children:"Column/expression"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"order_amount"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dimensions"})}),(0,r.jsx)(n.td,{children:"Group by columns"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[region, status]"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filter"})}),(0,r.jsx)(n.td,{children:"WHERE clause"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"status = 'active'"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"description"})}),(0,r.jsx)(n.td,{children:"Check description"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Validates order count"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fail"})}),(0,r.jsx)(n.td,{children:"Allow check failures"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"conditions",children:"Conditions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Condition"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gt"})}),(0,r.jsx)(n.td,{children:"Greater than"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual > threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ge"})}),(0,r.jsx)(n.td,{children:"Greater than or equal"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual >= threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"lt"})}),(0,r.jsx)(n.td,{children:"Less than"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual < threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"le"})}),(0,r.jsx)(n.td,{children:"Less than or equal"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual <= threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"eq"})}),(0,r.jsx)(n.td,{children:"Equal to"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual == threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"neq"})}),(0,r.jsx)(n.td,{children:"Not equal to"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"actual != threshold"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"between"})}),(0,r.jsx)(n.td,{children:"Between range"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"threshold[0] <= actual <= threshold[1]"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"threshold-types",children:"Threshold Types"}),"\n",(0,r.jsx)(n.h3,{id:"single-value",children:"Single Value"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"threshold: 1000\n"})}),"\n",(0,r.jsx)(n.h3,{id:"range-for-between-condition",children:"Range (for between condition)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"condition: between\nthreshold: [100, 500]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"decimal-values",children:"Decimal Values"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"threshold: 0.05 # 5% for percentage checks\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dimensions",children:"Dimensions"}),"\n",(0,r.jsx)(n.p,{children:"Group checks by specific columns:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Single dimension\ndimensions: [region]\n\n# Multiple dimensions\ndimensions: [region, product_category, quarter]\n\n# No dimensions (aggregate entire dataset)\ndimensions: []\n"})}),"\n",(0,r.jsx)(n.h2,{id:"time-dimensions",children:"Time Dimensions"}),"\n",(0,r.jsx)(n.p,{children:"Add time-based grouping:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"time_dimension:\n  name: created_at\n  granularity:\n    day # millennium, century, decade, year, quarter,\n    # month, week, day, hour, minute, second\n"})}),"\n",(0,r.jsx)(n.h2,{id:"filters",children:"Filters"}),"\n",(0,r.jsx)(n.p,{children:"Add WHERE clause conditions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Simple filter\nfilter:\n  - status = 'active'\n\n# Complex filter\nfilter:\n  - status IN ('active', 'pending') AND created_at >= '2024-01-01'\n\n# Multiple filters, will be combined with AND\nfilter:\n  - status = 'active'\n  - amount > 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dataset-options",children:"Dataset Options"}),"\n",(0,r.jsx)(n.h3,{id:"table-name",children:"Table Name"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dataset: orders\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multiple-tables",children:"Multiple Tables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dataset: [orders, returns, refunds]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-sql",children:"Custom SQL"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dataset: >\n  SELECT o.*, c.customer_tier\n  FROM orders o\n  JOIN customers c ON o.customer_id = c.id\n  WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"Use environment variables for sensitive data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"datasources:\n  - name: prod\n    type: postgresql\n    host: {{DB_HOST}}\n    user: {{DB_USER}}\n    password: {{DB_PASSWORD}}\n    db_name: {{DB_NAME}}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Set environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export DB_HOST=prod-db.company.com\nexport DB_USER=weiser_user\nexport DB_PASSWORD=secret123\nexport DB_NAME=production\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-includes",children:"Configuration Includes"}),"\n",(0,r.jsx)(n.p,{children:"Split configuration across multiple files:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# main.yaml\nversion: 1\nincludes:\n  - datasources.yaml\n  - checks/row_counts.yaml\n  - checks/revenue_checks.yaml\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# datasources.yaml\ndatasources:\n  - name: postgres_prod\n    type: postgresql\n    # ... connection details\n"})}),"\n",(0,r.jsx)(n.h2,{id:"templating",children:"Templating"}),"\n",(0,r.jsx)(n.p,{children:"Use template variables for reusable configurations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Template variables\nvariables:\n  min_row_count: 1000\n  revenue_threshold: 50000\n\nchecks:\n  - name: orders_count\n    dataset: orders\n    type: row_count\n    condition: gt\n    threshold: 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"slack-integration",children:"Slack Integration"}),"\n",(0,r.jsx)(n.p,{children:"Configure Slack notifications:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"slack_url: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX\n"})}),"\n",(0,r.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,r.jsx)(n.p,{children:"Weiser validates your configuration on startup. Common validation errors:"}),"\n",(0,r.jsx)(n.h3,{id:"missing-required-fields",children:"Missing Required Fields"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Check 'my_check' missing required field 'condition'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"invalid-check-type",children:"Invalid Check Type"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Unknown check type 'invalid_type'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"invalid-condition",children:"Invalid Condition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: Invalid condition 'invalid_condition'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"missing-threshold-for-between",children:"Missing Threshold for Between"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: 'between' condition requires array threshold [min, max]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Environment Variables"}),": Use for sensitive data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Descriptive Names"}),": Use clear, descriptive check names"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Add descriptions to complex checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modular Files"}),": Split large configurations into multiple files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Version Control"}),": Store configurations in version control"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Test configurations in non-production environments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring"}),": Set up alerts for check failures"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-complete-configuration",children:"Example Complete Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"version: 1\n\ndatasources:\n  - name: warehouse\n    type: postgresql\n    host: localhost\n    port: 5432\n    db_name: analytics\n    user: MyUser\n    password: MyPassword\n\nconnections:\n  - name: metricstore\n    type: metricstore\n    db_type: duckdb\n    db_name: weiser_metrics.db\n\nchecks:\n  # Row count checks\n  - name: orders_daily_count\n    dataset: orders\n    type: row_count\n    condition: gt\n    threshold: 100\n    time_dimension:\n      name: created_at\n      granularity: day\n\n  # Revenue validation\n  - name: daily_revenue\n    dataset: orders\n    type: sum\n    measure: order_amount\n    condition: ge\n    threshold: 10000\n    filter: status = 'completed'\n    time_dimension:\n      name: created_at\n      granularity: day\n\n  # Data completeness\n  - name: customer_data_completeness\n    dataset: customers\n    type: not_empty_pct\n    dimensions: [email, phone]\n    condition: le\n    # Max 5% NULL values\n    threshold: 0.05\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);