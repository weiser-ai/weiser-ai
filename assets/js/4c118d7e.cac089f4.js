"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[834],{560:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"check-types/numeric","title":"Numeric Check","description":"The numeric check allows you to validate custom numeric expressions and calculations. This is the most flexible check type for complex business logic validation.","source":"@site/docs/check-types/numeric.md","sourceDirName":"check-types","slug":"/check-types/numeric","permalink":"/docs/check-types/numeric","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Row Count Check","permalink":"/docs/check-types/row-count"},"next":{"title":"Sum Check","permalink":"/docs/check-types/sum"}}');var r=s(4848),t=s(8453);const a={},c="Numeric Check",l={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Numeric Check",id:"basic-numeric-check",level:3},{value:"Complex Expression",id:"complex-expression",level:3},{value:"Numeric with Dimensions",id:"numeric-with-dimensions",level:3},{value:"Using Window Functions",id:"using-window-functions",level:3},{value:"Statistical Analysis",id:"statistical-analysis",level:3},{value:"Standard Deviation Analysis",id:"standard-deviation-analysis",level:4},{value:"Coefficient of Variation",id:"coefficient-of-variation",level:4},{value:"Outlier Detection with Z-Score",id:"outlier-detection-with-z-score",level:4},{value:"Percentile Analysis",id:"percentile-analysis",level:4},{value:"Interquartile Range (IQR) Analysis",id:"interquartile-range-iqr-analysis",level:4},{value:"Correlation Analysis",id:"correlation-analysis",level:4},{value:"Data Distribution Validation",id:"data-distribution-validation",level:4},{value:"Time Series Statistical Analysis",id:"time-series-statistical-analysis",level:4},{value:"Supported SQL Functions",id:"supported-sql-functions",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Generated SQL",id:"generated-sql",level:2},{value:"Example Results",id:"example-results",level:2},{value:"Tips",id:"tips",level:2},{value:"Related Checks",id:"related-checks",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"numeric-check",children:"Numeric Check"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"numeric"})," check allows you to validate custom numeric expressions and calculations. This is the most flexible check type for complex business logic validation."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Unique name for the check"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dataset"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Table name or SQL query"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Must be ",(0,r.jsx)(n.code,{children:"numeric"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"measure"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"SQL expression to evaluate"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"condition"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Comparison operator"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"threshold"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Value to compare against"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dimensions"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Group by columns"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filter"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"WHERE clause conditions"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-numeric-check",children:"Basic Numeric Check"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: average_order_value\n  dataset: orders\n  type: numeric\n  measure: AVG(order_amount)\n  condition: gt\n  threshold: 50.0\n"})}),"\n",(0,r.jsx)(n.p,{children:"This check ensures the average order value is greater than $50."}),"\n",(0,r.jsx)(n.h3,{id:"complex-expression",children:"Complex Expression"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: conversion_rate\n  dataset: >\n    SELECT \n      campaign_id,\n      SUM(CASE WHEN status = 'converted' THEN 1 ELSE 0 END) as conversions,\n      COUNT(*) as total_leads\n    FROM marketing_leads \n    GROUP BY campaign_id\n  type: numeric\n  measure: CAST(conversions AS FLOAT) / CAST(total_leads AS FLOAT)\n  condition: ge\n  threshold: 0.05  # 5% minimum conversion rate\n"})}),"\n",(0,r.jsx)(n.p,{children:"This check validates that conversion rates are at least 5%."}),"\n",(0,r.jsx)(n.h3,{id:"numeric-with-dimensions",children:"Numeric with Dimensions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: revenue_by_region\n  dataset: sales\n  type: numeric\n  measure: SUM(revenue)\n  dimensions: [region, quarter]\n  condition: gt\n  threshold: 100000\n"})}),"\n",(0,r.jsx)(n.p,{children:"This check ensures each region/quarter combination has revenue > $100K."}),"\n",(0,r.jsx)(n.h3,{id:"using-window-functions",children:"Using Window Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: month_over_month_growth\n  dataset: monthly_sales\n  type: numeric\n  measure: |\n    (current_month_sales - LAG(current_month_sales) OVER (ORDER BY month)) \n    / LAG(current_month_sales) OVER (ORDER BY month)\n  condition: gt\n  threshold: 0.0  # Positive growth\n"})}),"\n",(0,r.jsx)(n.p,{children:"This check validates month-over-month growth is positive."}),"\n",(0,r.jsx)(n.h3,{id:"statistical-analysis",children:"Statistical Analysis"}),"\n",(0,r.jsx)(n.p,{children:"The numeric check is powerful for statistical validation and data quality assessment."}),"\n",(0,r.jsx)(n.h4,{id:"standard-deviation-analysis",children:"Standard Deviation Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- name: price_variance_control\n  dataset: products\n  type: numeric\n  measure: STDDEV(price)\n  condition: le\n  threshold: 50.0\n  description: "Ensure price variance is within acceptable range"\n'})}),"\n",(0,r.jsx)(n.p,{children:"This check ensures product prices don't vary too widely, indicating consistent pricing strategy."}),"\n",(0,r.jsx)(n.h4,{id:"coefficient-of-variation",children:"Coefficient of Variation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: sales_consistency\n  dataset: daily_sales\n  type: numeric\n  measure: STDDEV(daily_revenue) / AVG(daily_revenue)\n  condition: le\n  threshold: 0.3  # Max 30% coefficient of variation\n  dimensions: [region]\n"})}),"\n",(0,r.jsx)(n.p,{children:"This validates that sales are relatively consistent across regions (low coefficient of variation)."}),"\n",(0,r.jsx)(n.h4,{id:"outlier-detection-with-z-score",children:"Outlier Detection with Z-Score"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: outlier_detection\n  dataset: |\n    SELECT \n      customer_id,\n      order_amount,\n      (order_amount - AVG(order_amount) OVER()) / STDDEV(order_amount) OVER() as z_score\n    FROM orders\n    WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'\n  type: numeric\n  measure: COUNT(CASE WHEN ABS(z_score) > 3 THEN 1 END)\n  condition: le\n  threshold: 5  # Max 5 statistical outliers\n"})}),"\n",(0,r.jsx)(n.p,{children:"This check counts orders with z-scores beyond 3 standard deviations, limiting extreme outliers."}),"\n",(0,r.jsx)(n.h4,{id:"percentile-analysis",children:"Percentile Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: response_time_p95\n  dataset: api_logs\n  type: numeric\n  measure: PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY response_time_ms)\n  condition: le\n  threshold: 2000  # 95th percentile under 2 seconds\n  time_dimension:\n    name: timestamp\n    granularity: hour\n"})}),"\n",(0,r.jsx)(n.p,{children:"This validates that 95% of API responses are under 2 seconds."}),"\n",(0,r.jsx)(n.h4,{id:"interquartile-range-iqr-analysis",children:"Interquartile Range (IQR) Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- name: transaction_amount_iqr\n  dataset: transactions\n  type: numeric\n  measure: |\n    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY amount) - \n    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY amount)\n  condition: le\n  threshold: 1000\n  description: "Ensure transaction amounts have reasonable spread"\n'})}),"\n",(0,r.jsx)(n.p,{children:"This check monitors the interquartile range to detect unusual spread in transaction amounts."}),"\n",(0,r.jsx)(n.h4,{id:"correlation-analysis",children:"Correlation Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- name: price_quantity_correlation\n  dataset: order_items\n  type: numeric\n  measure: |\n    CORR(unit_price, quantity)\n  condition: between\n  threshold: [-0.3, 0.3]  # Weak correlation expected\n  description: "Price and quantity should have minimal correlation"\n'})}),"\n",(0,r.jsx)(n.p,{children:"This validates that price and quantity aren't strongly correlated, which might indicate pricing issues."}),"\n",(0,r.jsx)(n.h4,{id:"data-distribution-validation",children:"Data Distribution Validation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- name: order_amount_skewness\n  dataset: |\n    SELECT \n      order_amount,\n      AVG(order_amount) OVER() as mean_amount,\n      STDDEV(order_amount) OVER() as std_amount\n    FROM orders\n    WHERE order_amount > 0\n  type: numeric\n  measure: |\n    AVG(POWER((order_amount - mean_amount) / std_amount, 3))\n  condition: between\n  threshold: [-2.0, 2.0]  # Acceptable skewness range\n  description: "Order amounts should have reasonable distribution"\n'})}),"\n",(0,r.jsx)(n.p,{children:"This check calculates skewness to ensure order amounts follow a reasonable distribution."}),"\n",(0,r.jsx)(n.h4,{id:"time-series-statistical-analysis",children:"Time Series Statistical Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: daily_sales_trend_analysis\n  dataset: |\n    SELECT \n      DATE(created_at) as sale_date,\n      SUM(order_amount) as daily_total,\n      ROW_NUMBER() OVER (ORDER BY DATE(created_at)) as day_number\n    FROM orders\n    WHERE created_at >= CURRENT_DATE - INTERVAL '90 days'\n    GROUP BY DATE(created_at)\n  type: numeric\n  measure: |\n    CORR(day_number, daily_total)\n  condition: ge\n  threshold: -0.1  # Slight negative trend acceptable\n  description: \"Sales trend should not be strongly declining\"\n"})}),"\n",(0,r.jsx)(n.p,{children:"This analyzes sales trends over time using correlation with day numbers."}),"\n",(0,r.jsx)(n.h2,{id:"supported-sql-functions",children:"Supported SQL Functions"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"measure"})," parameter supports any valid SQL expression, including:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aggregation Functions"}),": ",(0,r.jsx)(n.code,{children:"SUM()"}),", ",(0,r.jsx)(n.code,{children:"AVG()"}),", ",(0,r.jsx)(n.code,{children:"COUNT()"}),", ",(0,r.jsx)(n.code,{children:"MIN()"}),", ",(0,r.jsx)(n.code,{children:"MAX()"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mathematical Functions"}),": ",(0,r.jsx)(n.code,{children:"ROUND()"}),", ",(0,r.jsx)(n.code,{children:"ABS()"}),", ",(0,r.jsx)(n.code,{children:"SQRT()"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conditional Logic"}),": ",(0,r.jsx)(n.code,{children:"CASE WHEN ... THEN ... ELSE ... END"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Window Functions"}),": ",(0,r.jsx)(n.code,{children:"LAG()"}),", ",(0,r.jsx)(n.code,{children:"LEAD()"}),", ",(0,r.jsx)(n.code,{children:"ROW_NUMBER()"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Casting"}),": ",(0,r.jsx)(n.code,{children:"CAST(column AS FLOAT)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Date Functions"}),": ",(0,r.jsx)(n.code,{children:"DATE_TRUNC()"}),", ",(0,r.jsx)(n.code,{children:"EXTRACT()"}),", etc."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Business Metrics"}),": Revenue, conversion rates, customer metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Quality"}),": Calculate data quality scores"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance KPIs"}),": Response times, success rates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Financial Validation"}),": Balances, totals, ratios"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom Logic"}),": Any complex business rule"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"generated-sql",children:"Generated SQL"}),"\n",(0,r.jsx)(n.p,{children:"The numeric check generates SQL like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT AVG(order_amount)\nFROM orders\nWHERE status = 'completed'\n"})}),"\n",(0,r.jsx)(n.p,{children:"With dimensions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT region, quarter, SUM(revenue)\nFROM sales\nGROUP BY region, quarter\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-results",children:"Example Results"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2713 average_order_value: 67.50 (> 50.0)\n\u2717 conversion_rate: 0.03 (\u2265 0.05)\n\u2713 revenue_by_region_east_q1: 125000 (> 100000)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"tips",children:"Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Casting"}),": Use ",(0,r.jsx)(n.code,{children:"CAST()"})," for precise decimal calculations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NULL Handling"}),": Consider ",(0,r.jsx)(n.code,{children:"COALESCE()"})," or ",(0,r.jsx)(n.code,{children:"ISNULL()"})," for NULL values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Use appropriate indexes for complex expressions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Test expressions in your database before adding to checks"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-checks",children:"Related Checks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/check-types/sum",children:(0,r.jsx)(n.strong,{children:"Sum"})})," - Simplified sum aggregation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/check-types/measure",children:(0,r.jsx)(n.strong,{children:"Measure"})})," - Cube.js specific measures"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);